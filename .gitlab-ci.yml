stages:
  - build-frontend
  - package-frontend
  - deploy-frontend
  - build-nginx
  - deploy-nginx

default:
  tags:
    - snack-test

build-frontend-job:
  stage: build-frontend
  script:
    - cd ./src/frontend
    - docker build . -t frontenv
    - mkdir file
    - cd file
    - docker run --rm -v "$(pwd):/src/frontend/file" frontenv

  artifacts:
    paths:
      - ./src/frontend/file/front.tar

# package-frontend-job:
#   stage: package-frontend

#   before_script:
#     - mkdir -p ~/.ssh
#     - eval $(ssh-agent -s)
#     - chmod 600 "$SSH_PRIVATE_KEY"
#     - ssh-add "$SSH_PRIVATE_KEY"

#   script:
#     - cd ./src/frontend/file
#     - scp front.tar ec2-user@${DEPLOY_IP}:/snack-style/frontend

deploy-frontend:
  stage: deploy-frontend
  tags:
    - snack-service
  script:
    - sudo tar -xvf ./src/frontend/file/front.tar -C /snack-style/frontend
# build-nginx-job:
#   stage: build-nginx
#   before_script:
#     - mkdir -p ~/.ssh
#     - eval $(ssh-agent -s)
#     - chmod 600 "$SSH_PRIVATE_KEY"
#     - ssh-add "$SSH_PRIVATE_KEY"

#   script:
#     - cd ./src/nginx
#     - docker build -t nginx ./
#     - docker save -o nginx.tar nginx
#     - scp nginx.tar ec2-user@${DEPLOY_IP}:/snack-style/image

# deploy-nginx-job:
#   stage: deploy-nginx
#   tags:
#     - snack-service
#   script:
#     - sudo docker stop nginx
#     - sudo docker rm nginx
#     - sudo docker image rm nginx
#     - sudo docker load -i /snack-style/image/nginx.tar
#     - sudo docker run -d --name nginx -p 80:8080 nginx
