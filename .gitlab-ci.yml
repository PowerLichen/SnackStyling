default:
  tags:
    - snack-test

stages:
  - build
  - test
  - package
  - deploy

build-spring:
  stage: build
  script:
    - cd src/backend/spring
    - ./gradlew clean
    - ./gradlew build --exclude-task test
  artifacts:
    paths:
      - src/backend/spring/build/libs/*.jar

build-django:
  stage: build
  script:
    - cp ~/u2net.onnx ./src/backend/django
    - cd src/backend/django
    - docker build -t django-server .

test-spring:
  stage: test
  script:
    - cd src/backend/spring
    - ./gradlew test
  artifacts:
    paths:
      - src/backend/spring/build/libs/*.jar
  allow_failure: true

test-django:
  stage: test
  script:
    - docker run --name django-server-test
      --env DEBUG=${DEBUG}
      --env DATABASE_NAME=${DATABASE_NAME}
      --env DATABASE_USER=${DATABASE_USER}
      --env DATABASE_PWD=${DATABASE_PWD}
      --env DATABASE_HOST=${DATABASE_HOST}
      --env USE_S3='False'
      django-server python manage.py test
  after_script:
    - docker rm django-server-test

package-spring:
  stage: package
  before_script:
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - chmod 600 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
  script:
    - cd src/backend/spring
    - docker build -t spring ./
    - docker save -o spring.tar spring
    - scp spring.tar ec2-user@13.209.54.85:/tmp
  artifacts:
    paths:
      - src/backend/spring/build/libs/*.jar
  only:
    refs:
      - master
      - feature/pipeline

package-django:
  stage: package
  before_script:
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - chmod 600 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
  script:
    - docker save -o django-server.tar django-server
    - scp django-server.tar ec2-user@${DEPLOY_IP}:/tmp
  only:
    refs:
      - master
      - feature/pipeline

deploy-spring:
  stage: deploy
  tags:
    - snack-service
  script:
    - sudo docker stop spring-service
    - sudo docker rm spring-service
    - sudo docker image rm spring
    - sudo docker load -i /tmp/spring.tar
    - sudo docker run --env-file=/tmp/.env -d --name spring-service -p 80:8080 spring
  only:
    refs:
      - master
      - feature/pipeline

deploy-django-server:
  stage: deploy
  tags:
    - snack-service
  script:
    - echo 'Service restart'
    - docker stop snack-django-service || echo 'docker stop.'
    - docker rm snack-django-service || echo 'docker rm container.'
    - docker image rm django-server || echo 'docker rm image.'
    - sudo docker load -i /tmp/django-server.tar
    - docker run -d --name snack-django-service
      --env DEBUG='False'
      --env DATABASE_NAME=${DATABASE_NAME}
      --env DATABASE_USER=${DATABASE_USER}
      --env DATABASE_PWD=${DATABASE_PWD}
      --env DATABASE_HOST=${DATABASE_HOST}
      --env USE_S3='True'
      --env AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
      --env AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
      --env AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      --env AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}
      django-server
  only:
    refs:
      - master
      - feature/pipeline